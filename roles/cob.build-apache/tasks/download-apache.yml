- name: create build directory
  # create a directory if it doesn't exist
  file: path={{ cob_apache_src_dir }}/ state=directory mode=0755

- name: Get Apache HTTPD Download location
  shell: curl {{ cob_apache_httpd_url }} | grep -o http://.*httpd-{{cob_apache_httpd_version}}.*.tar.gz\" | tr -d \"
  register: cob_apache_httpd_location

- name: Find out what HTTPD version we are downloading
  shell: echo {{ cob_apache_httpd_location.stdout }} | grep -o httpd-{{cob_apache_httpd_version}}.*[0-9]
  register: cob_apache_httpd_file

- name: Get Apache APR Download location
  shell: curl {{ cob_apache_apr_url }} | egrep -o http://.*apr-[0-9].*.tar.gz\" | tr -d \"
  register: cob_apache_apr_location

- name: Find out what APR version we are downloading
  shell: echo {{ cob_apache_apr_location.stdout }} | grep -o apr-[0-9].*[0-9]
  register: cob_apache_apr_file

- name: Get Apache APR-Util Download location
  shell: curl {{ cob_apache_apr_url }} | egrep -o http://.*apr-util.*.tar.gz\" | tr -d \"
  register: cob_apache_aprutil_location

- name: Get Apache APR-Util version we are downloading
  shell: echo {{ cob_apache_aprutil_location.stdout }} | egrep -o apr-util.*[0-9]
  register: cob_apache_aprutil_file

- name: Download Apache Files
  get_url: url={{ item }} dest={{ cob_apache_src_dir }}
  with_items:
    - "{{ cob_apache_httpd_location.stdout }}"
    - "{{ cob_apache_apr_location.stdout }}"
    - "{{ cob_apache_aprutil_location.stdout }}"

- name: copy local apache source file and extract
  unarchive: src={{ cob_apache_src_dir }}/{{ item }}.tar.gz dest={{ cob_apache_src_dir }} copy=no
  with_items:
    - "{{ cob_apache_httpd_file.stdout }}"
    - "{{ cob_apache_apr_file.stdout }}"
    - "{{ cob_apache_aprutil_file.stdout }}"
