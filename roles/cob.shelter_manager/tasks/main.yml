---
# tasks file for cob.shelter_manager

- name: Install Animal Shelter Manger dependencies
  apt:
    name: "{{ item }}"
    state: present
  tags: asm
  with_items:
    #some of these dependencies may have been covered by previous roles

    - make
    - python
    - python-imaging
    - python-webpy
    - python-mysqldb
    - python-psycopg2
    - imagemagick
    - wkhtmltopdf
    - python-requests
    - python-ndg-httpsclient
    - python-pyasn1
    - nodejs
    - pychecker
    - python-sphinx
    - python-sphinx-rtd-theme
    - texlive-latex-base

    #should have been installed and configured already
    #- mysql-client
    #- mysql-server

    # apache2 also should have been installed already
    #- apache2
    #- libapache2-mod-wsgi

# enables the Apache2 module "wsgi"
- apache2_module: state=present name=wsgi

- name: check if repository has already been checked out
  stat: path='{{ asm_path }}'
  register: check

#TODO:
#consider pulling the latest source bundle instead of checking out repository?
- git: repo=http://git.sheltermanager.com/asm3.git dest='{{ asm_path }}'
  when: not check.stat.exists

- file: path={{ asm_path }} state=directory owner=www-data group=staff recurse=yes mode=2770

#mysql config should be handled earlier now by mysql role directly

- template: src=sitedefs.py dest='{{ asm_path }}/src'
  tags: asm

#check if backup of 000-default.conf exists
#create a copy if not
# if it already exists, we won't move it again
- name: check if apached config backup already exists
  stat: path={{ apache_config }}.bkup
  register: check

#note that "copy" in ansible copies from ansible host to client
#one machine to the other
#here we just want to do the copy only on the client
- name: Make a backup copy of apache config file
  shell: cp {{ apache_config }} {{ apache_config }}.bkup
  when: not check.stat.exists

- template: src=000-default.conf dest=/etc/apache2/sites-available/000-default.conf
  notify:
    - apache_restart
  tags: asm

#this is useful for debugging purposes (running:
# cd /srv/asm/src
# python code.py 5000
- name: Allow debugging server
  ufw: rule=allow port=5000


#TODO:

# Daily tasks:
# =================================

# ASM has a batch of routines that need to be run every day. These
# should be run a few hours before people will start inputting for the
# day.

# These routines include recalculating denormalised data such as animal age, time
# on shelter, updating the waiting list and publishing to the internet.

# To run them, make sure the environment is setup as before and run
# python cron.py all

# See the cron.py file for more information on mode parameters to run
# specific tasks only.

# The Debian package automatically adds the daily tasks to /etc/cron.daily

