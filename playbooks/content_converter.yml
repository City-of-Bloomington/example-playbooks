- hosts: all
  become: yes
  vars_files:
    #these should be picked up automatically if using ansible 2.x
    #but for 1.x this works:
    - ../group_vars/content_converter.yml
    - ../group_vars/vault/content_converter.yml

  vars:    
    #mysql variables... these are specific to this playbook
    
    #mysql_root_password: "{{ converter_db_password }}"
    mysql_databases:
      - name: "{{ converter_db_name }}"
        #encoding: latin1
        #collation: latin1_general_ci
    mysql_users:
      - name: "{{ converter_db_username }}"
        host: "%"
        password: "{{ converter_db_password }}"
        priv: "{{ converter_db_name }}.*:ALL"
          
  roles:
    - cob.linux-common
    - cob.apache
    
    # MYSQL / DB:
    # ------------------
    # Configuring mysql with ansible is no small task.
    
    #- geerlingguy.mysql        
    # uses this role for installing mysql:
    # https://github.com/geerlingguy/ansible-role-mysql
      
    # this requires using ansible-galaxy to pull down the role first:
    # sudo ansible-galaxy install geerlingguy.mysql

    # (results in:
    #  "extracting geerlingguy.mysql to /etc/ansible/roles/geerlingguy.mysql" ) 

    # TODO:
    # this role works the first time it is run:
    # subsequent runs results in failure at:
    # TASK: [geerlingguy.mysql | Ensure MySQL users are present.] ******************* 
    # failed: [192.168.56.104] => {"censored": "results hidden due to no_log parameter", "failed": true}

    # might be due to the version of ansible?

    # removing mysql packages and data directory allows it to work again
    # sudo apt-get remove mysql-client mysql-server
    # sudo rm -rf /var/lib/mysql

    #- geerlingguy.mysql            
    
    - cob.content_converter
