- name: create build directory
  # create a directory if it doesn't exist
  file: path={{ src_dir }}/ state=directory mode=0755

    #TODO:
    #not sure how to automate picking the latest stable versions

    # This is an alternative approach, downloading directly to host machine:
    # http://docs.ansible.com/ansible/get_url_module.html
    # - name: download apached source
    #   #get_url: url=http://ftp.wayne.edu/apache//httpd/httpd-2.4.16.tar.gz dest=/tmp/apache/ checksum=sha256:a7c6859293f59b5066b09275c69ded42bbbaf100
    #   get_url: url=http://ftp.wayne.edu/apache//httpd/httpd-2.4.16.tar.gz dest=/tmp/apache/ 
    
    
    #for now just download the source files locally and then transfer
    #this has the benefit of reducing downloads if configuring multiple machines

    #download apache from:
    #http://httpd.apache.org/download.cgi

    #Then download apr and apr-util from:
    #http://apr.apache.org/download.cgi

    #place them in the ./downloads directory on local machine:
    #cd downloads/
    #mv ~/Downloads/httpd-* .
    #mv ~/Downloads/apr-* .    
    
    #http://docs.ansible.com/ansible/unarchive_module.html
- name: copy local apache source file and extract
  unarchive: src=downloads/{{ httpd_version }}.tar.gz dest={{ src_dir }}

- name: copy local apr source file and extract
  # this doesn't prevent the subsequent move requirement:   
  #unarchive: src=downloads/{{ apr_version }}.tar.gz dest={{ httpd_dir }}/srclib/
  unarchive: src=downloads/{{ apr_version }}.tar.gz dest={{ src_dir }}

- name: copy local apr-util source file and extract
  #unarchive: src=downloads/{{ apr_util_version }}.tar.gz dest={{ httpd_dir }}/srclib/
  unarchive: src=downloads/{{ apr_util_version }}.tar.gz dest={{ src_dir }}

#http://stackoverflow.com/questions/24162996/how-to-move-rename-a-file-using-an-ansible-task-on-a-remote-system

#check for earlier copies:
- name: Check if apr path exists
  stat: path={{ httpd_dir }}/srclib/apr
  register: check_apr_path

- name: Move apr to httpd/srclib
  command: mv {{ src_dir }}/{{ apr_version }} {{ httpd_dir }}/srclib/apr
  when: not check_apr_path.stat.exists
      
- name: Check if apr util path exists
  stat: path={{ httpd_dir }}/srclib/apr-util
  register: check_apr_util_path

- name: Move apr-util to httpd/srclib
  command: mv {{ src_dir }}/{{ apr_util_version }} {{ httpd_dir }}/srclib/apr-util
  when: not check_apr_util_path.stat.exists

#TODO:
#not sure if there is a way to check that this step has happened previously
#and skip it in that case

#adapted via:
#http://serverfault.com/questions/573843/ansible-playbook-not-working-trying-to-run-make-configure-with-complex-switche
    
- name: Build httpd with apr
  shell: 'cd {{ httpd_dir }};{{ item }}'
  with_items:
    - ./configure --prefix=/usr/local/apache --with-included-apr --enable-proxy --enable-so --enable-ssl --enable-expires --enable-headers --enable-rewrite --enable-cgi --disable-status --disable-userdir --disable-autoindex --with-mpm=prefork
    - make
    - make install

# http://docs.ansible.com/ansible/user_module.html
- name: Add apache user
  user: name=apache comment="Apache User" home=/usr/local/apache system=yes shell=/dev/null



    #update apache configuration file:
    #
    #with this approach, updates to the configuration file
    #in new versions of apache of would be included
    #
    #running in to problems with this approach for lines with quotes in them
    #it's close, and sed may be an alternative to fixing this
    #for now I need to move on to a working installation

    #http://docs.ansible.com/ansible/lineinfile_module.html
    #http://docs.ansible.com/ansible/YAMLSyntax.html
    #backrefs=yes avoid lines being added at the end of the file
    #http://stackoverflow.com/questions/19390600/ansible-lineinfile-duplicates-line
    
    # - name: update httpd.conf Load modules
    #   lineinfile: dest=/usr/local/apache/conf/httpd.conf regexp="#{{ item }}" line="{{ item }}" backrefs=yes
    #   with_items:
    #     - LoadModule socache_shmcb_module modules/mod_socache_shmcb.so
    #     - LoadModule slotmem_shm_module modules/mod_slotmem_shm.so
    #     - LoadModule ssl_module modules/mod_ssl.so
    #     - LoadModule rewrite_module modules/mod_rewrite.so

    # - name: update httpd.conf User
    #   lineinfile: dest=/usr/local/apache/conf/httpd.conf regexp="User daemon" line="User apache" backrefs=yes

    # - name: update httpd.conf Group
    #   lineinfile: dest=/usr/local/apache/conf/httpd.conf regexp="Group daemon" line="Group apache" backrefs=yes

    # - name: update httpd.conf DocumentRoot
    #   lineinfile: dest=/usr/local/apache/conf/httpd.conf regexp='DocumentRoot "/usr/local/apache/htdocs"' line='DocumentRoot "/srv/sites/master"' backrefs=yes

    # - name: update httpd.conf DocumentRoot (2)
    #   lineinfile: dest=/usr/local/apache/conf/httpd.conf regexp='<Directory "/usr/local/apache/htdocs">' line='<Directory "/srv/sites/master">' backrefs=yes

    # - name: update httpd.conf DirectoryIndex
    #   lineinfile: dest=/usr/local/apache/conf/httpd.conf regexp="DirectoryIndex index.html" line="    DirectoryIndex index.php index.html" backrefs=yes

    # - name: update httpd.conf ErrorLog
    #   lineinfile: dest=/usr/local/apache/conf/httpd.conf regexp='ErrorLog "logs/error_log"' line='ErrorLog "/var/log/httpd/error.log"' backrefs=yes

    # - name: update httpd.conf CustomLog common
    #   lineinfile: dest=/usr/local/apache/conf/httpd.conf backrefs=yes regexp="   CustomLog \"logs/access_log\" common" line="    #CustomLog \"logs/access_log\" common" 

    # - name: update httpd.conf CustomLog combined
    #   lineinfile: dest=/usr/local/apache/conf/httpd.conf regexp='    #CustomLog "logs/access_log" combined' line='    CustomLog "/var/log/httpd/access.log" combined' backrefs=yes


# just copying a local template over instead of updating in place:
- name: Create apache configuration file
  template: src=templates/httpd.conf.j2 dest=/usr/local/apache/conf/httpd.conf

- name: create /var/log/httpd directory
  file: path=/var/log/httpd state=directory mode=0755
      
- name: create /srv/sites directory
  # create a directory if it doesn't exist
  file: path=/srv/sites state=directory mode=0775
      
#check for earlier copies:
- name: Check if /srv/sites/master path exists
  stat: path=/srv/sites/master
  register: check_path

- name: Copy htdocs to /srv/sites/master
  command: cp -R /usr/local/apache/htdocs /srv/sites/master
  when: not check_path.stat.exists
    
- name: update ownership
  command: chown -R apache:staff /srv/sites
    
- name: update group as writeable
  command: chmod -R g+w /srv/sites
    
- name: ensure websites.conf file exists
  command: touch /usr/local/apache/conf/websites.conf

      
    #http://docs.ansible.com/ansible/lineinfile_module.html
- name: update apachectl
  lineinfile: dest=/usr/local/apache/bin/apachectl state=present insertbefore=BOF line="{{ item }}" 
  with_items:
    #this is reverse of what it should be in the file
    - "### END INIT INFO"
    - "# Description:       Start the web server"
    - "# Short-Description: Apache web server"
    - "# X-Interactive:     true"
    - "# Default-Stop:      0 1 6"
    - "# Default-Start:     2 3 4 5"
    - "# Required-Stop:     $local_fs $remote_fs $network $syslog $named"
    - "# Required-Start:    $local_fs $remote_fs $network $syslog $named"
    - "# Provides:          apache"
    - "### BEGIN INIT INFO"    

- name: link to apachectl
  #this is idempotent
  file: src=/usr/local/apache/bin/apachectl dest=/etc/init.d/apache state=link
  #command: ln -s /usr/local/apache/bin/apachectl /etc/init.d/apache
        
- name: Create logrotate configuration file
  template: src=templates/logrotate.apache.j2 dest=/etc/logrotate.d/apache

- name: enable apache to start at boot
  service: name=apache enabled=yes

- name: make sure apache is running!
  service: name=apache state=started
